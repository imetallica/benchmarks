version: '3'

networks:
  benchmark: {}

services:

  postgres:
    networks:
    - benchmark
    image: postgres:11-alpine

  nginx:
    image: nginx:alpine
    volumes:
    - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
    - ./nginx/conf/proxy.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
    - benchmark
    ports:
    - "8011:8001"
    - "8012:8002"
    - "8013:8003"
    - "8014:8004"
    - "8015:8005"
    - "8016:8006"
    command: nginx -g 'daemon off;'

  #haproxy:
  #  networks:
  #  - benchmark
  #  ports:
  #  - "8021:8001"
  #  - "8022:8002"
  #  - "8023:8003"
  #  - "8024:8004"
  #  - "8025:8005"
  #  - "8026:8006"

  cruby_unicorn_sinatra:
    depends_on:
    - postgres
    networks:
    - benchmark
    environment:
      DATABASE_URL: postgres://postgres@postgres/postgres
    build:
      args:
        SERVER: unicorn
        LIBRARY: sinatra
      context: '.'
      dockerfile: Dockerfile.cruby
    ports:
    - "8001:8080"
    command: unicorn -p 8080 --env production

  cruby_unicorn_grape:
    depends_on:
    - postgres
    networks:
    - benchmark
    environment:
      DATABASE_URL: postgres://postgres@postgres/postgres
    build:
      args:
        SERVER: unicorn
        LIBRARY: grape
      context: '.'
      dockerfile: Dockerfile.cruby
    ports:
    - "8002:8080"
    command: unicorn -p 8080 --env production

  cruby_puma_sinatra:
    depends_on:
    - postgres
    networks:
    - benchmark
    environment:
      DATABASE_URL: postgres://postgres@postgres/postgres
    build:
      args:
        SERVER: puma
        LIBRARY: sinatra
      context: '.'
      dockerfile: Dockerfile.cruby
    ports:
    - "8003:8080"
    command: puma -p 8080 -e production

  cruby_puma_grape:
    depends_on:
    - postgres
    networks:
    - benchmark
    environment:
      DATABASE_URL: postgres://postgres@postgres/postgres
    build:
      args:
        SERVER: puma
        LIBRARY: grape
      context: '.'
      dockerfile: Dockerfile.cruby
    ports:
    - "8004:8080"
    command: puma -p 8080 -e production

  jruby_puma_grape:
    depends_on:
    - postgres
    networks:
    - benchmark
    environment:
      DATABASE_URL: postgres://postgres@postgres/postgres
    build:
      args:
        SERVER: puma
        LIBRARY: grape
      context: '.'
      dockerfile: Dockerfile.jruby
    ports:
    - "8005:8080"
    command: puma -p 8080 -e production

  jruby_puma_sinatra:
    depends_on:
    - postgres
    networks:
    - benchmark
    environment:
      DATABASE_URL: postgres://postgres@postgres/postgres
    build:
      args:
        SERVER: puma
        LIBRARY: sinatra
      context: '.'
      dockerfile: Dockerfile.jruby
    ports:
    - "8006:8080"
    command: puma -p 8080 -e production